<?xml version="1.0" encoding="UTF-8"?>
<DataTemplate xmlns="http://xamarin.com/schemas/2014/forms"
              xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
              x:Class="LiveScore.Soccer.Views.Templates.MatchDetails.HeadToHead.CollectionViewTemplates.TeamMatchItemTemplate"
              xmlns:resources="clr-namespace:LiveScore.Soccer.ViewResources"
              xmlns:coreResources="clr-namespace:LiveScore.Core.ViewResources;assembly=LiveScore.Core"
              xmlns:commonConverters="clr-namespace:LiveScore.Common.Converters;assembly=LiveScore.Common"
              xmlns:soccerConverters="clr-namespace:LiveScore.Soccer.Converters;assembly=LiveScore.Soccer">
    <ViewCell>
        <StackLayout>
            <StackLayout.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <coreResources:MatchViewResource />
                        <resources:MatchDetailViewResource />
                        <resources:MatchDetailH2HViewResource />
                    </ResourceDictionary.MergedDictionaries>
                    <commonConverters:TextNotEmptyConverter x:Key="TextNotEmptyConverter" />
                </ResourceDictionary>
            </StackLayout.Resources>
            <!-- Matches -->
            <Grid Style="{StaticResource MatchGeneralInfoTeams}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>

                <StackLayout Grid.Row="0"
                             Grid.RowSpan="2"
                             Grid.Column="0"
                             Style="{StaticResource MatchStatusContainer}">
                    <Label Style="{StaticResource MatchDetailH2HMatchStatus}"
                           Text="{Binding DisplayEventDate}" />
                    <Label Style="{StaticResource MatchDetailH2HMatchStatus}"
                           Text="{Binding DisplayMatchStatus}" />
                </StackLayout>

                <StackLayout Grid.Row="0"
                             Grid.Column="1"
                             Style="{StaticResource MatchHomeTeam}">
                    <Label AutomationId="HomeTeamName"
                           Style="{StaticResource Team}"
                           Text="{Binding Match.HomeTeamName, Mode=OneTime}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding IsHomeSelected}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="White" />
                                <Setter Property="FontFamily"
                                        Value="{StaticResource RobotoBold}" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label IsVisible="{Binding Match.HomePenaltyImage, Converter={StaticResource TextNotEmptyConverter}}"
                           Style="{StaticResource MatchPenaltyIcon}" />
                    <Label IsVisible="{Binding Match.HomeSecondLegImage, Converter={StaticResource TextNotEmptyConverter}}"
                           Style="{StaticResource MatchSecondLegIcon}" />
                </StackLayout>
                <StackLayout Grid.Row="1"
                             Grid.Column="1"
                             Style="{StaticResource MatchAwayTeam}">
                    <Label AutomationId="AwayTeamName"
                           Style="{StaticResource Team}"
                           Text="{Binding Match.AwayTeamName, Mode=OneTime}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding IsAwaySelected}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="White" />
                                <Setter Property="FontFamily"
                                        Value="{StaticResource RobotoBold}" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label IsVisible="{Binding Match.AwayPenaltyImage, Converter={StaticResource TextNotEmptyConverter}, Mode=OneTime}"
                           Style="{StaticResource MatchPenaltyIcon}" />
                    <Label IsVisible="{Binding Match.AwaySecondLegImage, Converter={StaticResource TextNotEmptyConverter}}"
                           Style="{StaticResource MatchSecondLegIcon}" />
                </StackLayout>
                <Label Grid.Row="0"
                       Grid.Column="2"
                       AutomationId="HomeScore"
                       Style="{StaticResource HomeScore}"
                       Text="{Binding Match.HomeScore, Mode=OneTime}"
                       IsVisible="{Binding Match.EventStatus.ShowScore}" />

                <Label Grid.Row="1"
                       Grid.Column="2"
                       AutomationId="AwayScore"
                       Style="{StaticResource AwayScore}"
                       Text="{Binding Match.AwayScore, Mode=OneTime}"
                       IsVisible="{Binding Match.EventStatus.ShowScore}" />

                <Button Grid.Column="3"
                        Grid.RowSpan="2"
                        Text="{Binding Result}"
                        Style="{StaticResource MatchDetailH2HResultIcon}">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding Result}"
                                     Value="W">
                            <Setter Property="BackgroundColor"
                                    Value="{StaticResource WinIconColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding Result}"
                                     Value="L">
                            <Setter Property="BackgroundColor"
                                    Value="{StaticResource LoseIconColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding Result}"
                                     Value="D">
                            <Setter Property="BackgroundColor"
                                    Value="{StaticResource DrawIconColor}" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
            </Grid>
            <BoxView Style="{StaticResource HorizontalLine}" />
        </StackLayout>
    </ViewCell>
</DataTemplate>