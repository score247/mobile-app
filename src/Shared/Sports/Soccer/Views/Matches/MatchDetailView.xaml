<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage x:Class="LiveScore.Soccer.Views.Matches.MatchDetailView"
             xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:ffimageloadingsvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
             xmlns:commonConverters="clr-namespace:LiveScore.Common.Converters;assembly=LiveScore.Common"
             xmlns:tabStrip="clr-namespace:LiveScore.Core.Controls.TabStrip;assembly=LiveScore.Core"
             xmlns:coreResources="clr-namespace:LiveScore.Core.ViewResources;assembly=LiveScore.Core"
             xmlns:coreTemplates="clr-namespace:LiveScore.Core.Views.Templates;assembly=LiveScore.Core"
             xmlns:viewModels="clr-namespace:LiveScore.Soccer.ViewModels.Matches"
             xmlns:resources="clr-namespace:LiveScore.Soccer.ViewResources"
             xmlns:soccerTemplate="clr-namespace:LiveScore.Soccer.Views.Matches.Templates;assembly=LiveScore.Soccer"
             x:DataType="viewModels:MatchDetailViewModel"
             BackgroundColor="{StaticResource SecondColor}">
    <NavigationPage.TitleView>
        <coreTemplates:NavigationTitleTemplate Title="{Binding Title}"
                                               CurrentSport="{Binding CurrentSportName}"
                                               VisibleFavorite="False" />
    </NavigationPage.TitleView>
    <ContentPage.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <resources:MatchDetailViewResource />
                <coreResources:MatchHeaderViewResource />
                <coreResources:MatchViewResource />
            </ResourceDictionary.MergedDictionaries>
            <commonConverters:UpperCaseConverter x:Key="UpperCaseConverter" />
            <commonConverters:TextNotEmptyConverter x:Key="TextNotEmptyConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <AbsoluteLayout>
            <BoxView BackgroundColor="{StaticResource DateBarLineColor}"
                     Style="{StaticResource HorizontalLine}" />
            <StackLayout x:Name="MatchDetailLayout"
                         VerticalOptions="FillAndExpand"
                         AbsoluteLayout.LayoutBounds="0,0,1,1.22"
                         AbsoluteLayout.LayoutFlags="SizeProportional">
                <Frame CornerRadius="0"
                       HasShadow="True">
                    <StackLayout x:Name="MatchDetailGeneralInfo">
                        <Grid Style="{StaticResource MatchGeneralInfoLeagueBox}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{StaticResource FunctionGroupHeight}" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ffimageloadingsvg:SvgCachedImage Grid.Row="0"
                                                              Grid.Column="0"
                                                              DownsampleToViewSize="True"
                                                              LoadingPlaceholder="images/flag_league/default_flag.svg"
                                                              Source="{Binding CountryFlag}"
                                                              Style="{StaticResource CountryFlag}" />

                            <Label Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationId="LeagueName"
                                   LineBreakMode="TailTruncation"
                                   Style="{StaticResource LeagueName}"
                                   Text="{Binding MatchViewModel.Match.LeagueGroupName, Converter={StaticResource UpperCaseConverter}}" />
                            <Label Grid.Row="0"
                                   Grid.Column="2"
                                   AutomationId="LeagueDate"
                                   Style="{StaticResource MatchDate}"
                                   Text="{Binding DisplayEventDate}" />
                        </Grid>
                        <BoxView Style="{StaticResource HorizontalLine}" />
                        <Grid Style="{StaticResource MatchGeneralInfoTeams}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="25" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="38" />
                            </Grid.ColumnDefinitions>
                            <FlexLayout Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="0"
                                        CompressedLayout.IsHeadless="True"
                                        Style="{StaticResource MatchStatusContainer}">
                                <Label AutomationId="LiveIndicator"
                                       IsVisible="{Binding MatchViewModel.Match.IsInLiveAndNotExtraTime}"
                                       Style="{StaticResource LiveIcon}" />
                                <Label AutomationId="ExtraTimeIndicator"
                                       IsVisible="{Binding MatchViewModel.Match.IsInExtraTime}"
                                       Style="{StaticResource ExtraTimeIcon}" />
                                <Label AutomationId="MatchStatus"
                                       Style="{StaticResource MatchStatus}"
                                       Text="{Binding MatchViewModel.DisplayMatchStatus}" />
                            </FlexLayout>
                            <StackLayout Grid.Row="0"
                                         Grid.Column="1"
                                         Style="{StaticResource MatchHomeTeam}"
                                         CompressedLayout.IsHeadless="true">
                                <Label AutomationId="HomeTeamName"
                                       Style="{StaticResource Team}"
                                       Text="{Binding MatchViewModel.Match.HomeTeamName}" />
                                <soccerTemplate:RedCardTemplate RedCards="{Binding MatchViewModel.Match.TotalHomeRedCards}" />
                                <Label AutomationId="HomeTeamPenalty"
                                       IsVisible="{Binding MatchViewModel.Match.HomePenaltyImage, Converter={StaticResource TextNotEmptyConverter}}"
                                       Style="{StaticResource MatchPenaltyIcon}" />
                                <Label AutomationId="HomeTeamSecondLeg"
                                       IsVisible="{Binding MatchViewModel.Match.HomeSecondLegImage, Converter={StaticResource TextNotEmptyConverter}}"
                                       Style="{StaticResource MatchSecondLegIcon}" />
                            </StackLayout>
                            <StackLayout Grid.Row="1"
                                         Grid.Column="1"
                                         Style="{StaticResource MatchAwayTeam}"
                                         CompressedLayout.IsHeadless="true">
                                <Label AutomationId="AwayTeamName"
                                       Style="{StaticResource Team}"
                                       Text="{Binding MatchViewModel.Match.AwayTeamName}" />
                                <soccerTemplate:RedCardTemplate RedCards="{Binding MatchViewModel.Match.TotalAwayRedCards}" />
                                <Label AutomationId="AwayTeamPenalty"
                                       IsVisible="{Binding MatchViewModel.Match.AwayPenaltyImage, Converter={StaticResource TextNotEmptyConverter}}"
                                       Style="{StaticResource MatchPenaltyIcon}" />
                                <Label AutomationId="AwayTeamSecondLeg"
                                       IsVisible="{Binding MatchViewModel.Match.AwaySecondLegImage, Converter={StaticResource TextNotEmptyConverter}}"
                                       Style="{StaticResource MatchSecondLegIcon}" />
                            </StackLayout>
                            <Label Grid.Row="0"
                                   Grid.Column="2"
                                   AutomationId="HomeScore"
                                   IsVisible="{Binding MatchViewModel.Match.EventStatus.ShowScore}"
                                   Style="{StaticResource HomeScore}"
                                   Text="{Binding MatchViewModel.Match.HomeScore}" />
                            <Label Grid.Row="1"
                                   Grid.Column="2"
                                   AutomationId="AwayScore"
                                   IsVisible="{Binding MatchViewModel.Match.EventStatus.ShowScore}"
                                   Style="{StaticResource AwayScore}"
                                   Text="{Binding MatchViewModel.Match.AwayScore}" />
                            <Button Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="3"
                                    Command="{Binding MatchViewModel.FavoriteCommand}"
                                    Style="{StaticResource InActiveFavoriteIcon}">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding MatchViewModel.IsFavorite}"
                                                 Value="True">
                                        <Setter Property="Style"
                                                Value="{StaticResource ActiveFavoriteIcon}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding MatchViewModel.EnableFavorite}"
                                                 Value="True">
                                        <Setter Property="IsEnabled"
                                                Value="True" />
                                        <Setter Property="Command"
                                                Value="{Binding MatchViewModel.FavoriteCommand}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding MatchViewModel.EnableFavorite}"
                                                 Value="False">
                                        <Setter Property="IsEnabled"
                                                Value="False" />
                                        <Setter Property="Command"
                                                Value="" />
                                        <Setter Property="Style"
                                                Value="{StaticResource DisabledFavoriteIcon}" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                        </Grid>
                        <BoxView Style="{StaticResource HorizontalLine}" />
                    </StackLayout>
                </Frame>
                <Label AutomationId="SecondLegDetail"
                       IsVisible="{Binding DisplaySecondLeg, Converter={StaticResource TextNotEmptyConverter}}"
                       Style="{StaticResource MatchGeneralInfoImportantContent}"
                       Text="{Binding DisplaySecondLeg}" />
                <tabStrip:TabStrip x:Name="TabStrip"
                                   ItemTappedCommand="{Binding FunctionTabTappedCommand}"
                                   VerticalOptions="FillAndExpand"
                                   ItemsSource="{Binding TabItems}" />
                <ActivityIndicator IsRunning="{Binding IsBusy}"
                                   IsVisible="{Binding IsBusy}"
                                   Style="{StaticResource CenterActivityIndicator}"
                                   VerticalOptions="Start" />
            </StackLayout>
        </AbsoluteLayout>
    </ContentPage.Content>
</ContentPage>