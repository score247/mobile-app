// <auto-generated>
// </auto-generated>
namespace LiveScore.Soccer.ViewModels
{
    using LiveScore.Common.LangResources;
    using LiveScore.Core;
    using LiveScore.Core.Enumerations;
    using LiveScore.Core.Models.Matches;
    using LiveScore.Core.ViewModels;
    using Prism.Navigation;
    using Xamarin.Forms;
    using System.Linq;

    public class MatchDetailInfoItemViewModel : ViewModelBase
    {
        public MatchDetailInfoItemViewModel(
            ITimeline timelineEvent,
            IMatchResult matchResult,
            INavigationService navigationService,
            IDependencyResolver depdendencyResolver)
            : base(navigationService, depdendencyResolver)
        {
            TimelineEvent = timelineEvent;
            Result = matchResult;

            BuildScoreAndMatchTime(timelineEvent);
        }

        public ITimeline TimelineEvent { get; }

        public IMatchResult Result { get; }

        public Color RowColor { get; private set; }

        public string MainEventStatus { get; private set; }

        public bool VisibleMainEventStatus { get; private set; }

        public string MatchTime { get; private set; }

        public bool VisibleMatchTime { get; private set; }

        public string HomePlayerName { get; set; }

        public string HomeAssistName { get; set; }

        public bool VisibleHomeBall { get; set; }

        public bool VisibleHomeOwnGoalBall { get; set; }

        public bool VisibleHomeYellowCard { get; set; }

        public bool VisibleHomeRedCard { get; set; }

        public bool VisibleHomeRedYellowCard { get; set; }

        public bool VisibleHomeMissPenaltyGoalBall { get; set; }

        public bool VisibleHomePenaltyGoalBall { get; set; }

        public bool VisibleScore { get; set; }

        public string Score { get; set; }

        public string AwayPlayerName { get; set; }

        public string AwayAssistName { get; set; }

        public bool VisibleAwayBall { get; set; }

        public bool VisibleAwayOwnGoalBall { get; set; }

        public bool VisibleAwayYellowCard { get; set; }

        public bool VisibleAwayRedCard { get; set; }

        public bool VisibleAwayRedYellowCard { get; set; }

        public bool VisibleAwayMissPenaltyGoalBall { get; set; }

        public bool VisibleAwayPenaltyGoalBall { get; set; }

        private void BuildScoreAndMatchTime(ITimeline timeline)
        {
            Score = $"{timeline.HomeScore} - {timeline.AwayScore}";

            RowColor = (Color)Application.Current.Resources["SecondColor"];
            VisibleMatchTime = true;

            MatchTime = string.IsNullOrEmpty(timeline.StoppageTime)
                ? timeline.MatchTime + "'"
                : timeline.MatchTime + "+" + timeline.StoppageTime + "'";
        }

        private void BuildCard(ITimeline timeline)
        {
            if (timeline.Type == EventTypes.YellowCard)
            {
                if (timeline.Team == "home")
                {
                    VisibleHomeYellowCard = true;
                    HomePlayerName = timeline.Player.Name;
                }
                else
                {
                    VisibleAwayYellowCard = true;
                    AwayPlayerName = timeline.Player.Name;
                }
            }

            if (timeline.Type == EventTypes.RedCard)
            {
                if (timeline.Team == "home")
                {
                    VisibleHomeRedCard = true;
                    HomePlayerName = timeline.Player.Name;
                }
                else
                {
                    VisibleAwayRedCard = true;
                    AwayPlayerName = timeline.Player.Name;
                }
            }

            if (timeline.Type == EventTypes.YellowRedCard)
            {
                if (timeline.Team == "home")
                {
                    VisibleHomeRedYellowCard = true;
                    HomePlayerName = timeline.Player.Name;
                }
                else
                {
                    VisibleAwayRedYellowCard = true;
                    AwayPlayerName = timeline.Player.Name;
                }
            }
        }

        private void BuildMatchEnd(ITimeline timeline)
        {
            if (timeline.Type == EventTypes.MatchEnded)
            {
                VisibleMatchTime = false;
                RowColor = Color.FromHex("#2E3245");
                MainEventStatus = AppResources.FullTime;
                VisibleMainEventStatus = true;
                VisibleScore = true;
                Score = $"{Result.HomeScore} - {Result.AwayScore}";
            }

            if (timeline.Type == EventTypes.PenaltyMissed)
            {
                VisibleScore = true;

                if (timeline.Team == "home")
                {
                    VisibleHomeMissPenaltyGoalBall = true;
                    HomePlayerName = timeline.Player.Name;
                }
                else
                {
                    VisibleAwayMissPenaltyGoalBall = true;
                    AwayPlayerName = timeline.Player.Name;
                }
            }
        }

        private void BuildBreakStart(ITimeline timeline)
        {
            if (timeline.Type == EventTypes.BreakStart)
            {
                VisibleMatchTime = false;
                RowColor = Color.FromHex("#2E3245");
                MainEventStatus = AppResources.HalfTime;
                VisibleMainEventStatus = true;
                VisibleScore = true;

                if (Result?.MatchPeriods != null)
                {
                    var halfTimeResult = Result.MatchPeriods.FirstOrDefault();
                    Score = $"{halfTimeResult.HomeScore} - {halfTimeResult.AwayScore}";
                }
                else
                {
                    Score = "-";
                }
            }
        }

    }
}