<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="LiveScore.Score.Views.ScoresView"
             x:Name="self"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             xmlns:b="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"
             xmlns:mvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             prism:ViewModelLocator.AutowireViewModel="True"
             xmlns:commonConverters="clr-namespace:LiveScore.Common.Converters;assembly=LiveScore.Common"
             xmlns:coreConverters="clr-namespace:LiveScore.Core.Converters;assembly=LiveScore.Core"
             xmlns:coreResources="clr-namespace:LiveScore.Core.ViewResources;assembly=LiveScore.Core"
             xmlns:coreTemplates="clr-namespace:LiveScore.Core.Views.Templates;assembly=LiveScore.Core"
             xmlns:quickAccessCalendar="clr-namespace:LiveScore.Score.Controls.QuickAccessCalendar.Views"
             BackgroundColor="{StaticResource PrimaryColor}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Name="Search" Icon="images/common/search.png" Priority="1" />
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <ResourceDictionary>
             <ResourceDictionary.MergedDictionaries>
                <coreResources:MatchViewResource />
            </ResourceDictionary.MergedDictionaries>
            <commonConverters:InverseBoolConverter x:Key="inverseBoolConverter" />
            <coreConverters:MatchTemplateSelector x:Key="matchTemplateSelector" />
            <coreTemplates:MatchHeaderTemplate x:Key="matchHeaderTemplate" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <StackLayout>
        <quickAccessCalendar:QuickAccessCalendar 
            DateRange="{Binding QuickAccessCalendarDateRange}"
            SelectDateCommand="{Binding QuickAccessCalendarSelectDateCommand}"
            SelectHomeCommand="{Binding QuickAccessCalendarSelectHomeCommand}" />
        
        <ActivityIndicator x:Name="activity"
                           IsRunning="{Binding IsLoading}"
                           IsVisible="{Binding IsLoading}"
                           IsEnabled="{Binding IsLoading}"
                           Style="{StaticResource CenterActivityIndicator}" />
        <ListView
                IsVisible="{Binding IsNotLoading}"
                ItemsSource="{Binding MatchGroups}"
                VerticalOptions="FillAndExpand"
                HasUnevenRows="true"
                IsPullToRefreshEnabled="true"
                RefreshCommand="{Binding MatchRefreshCommand}"
                IsRefreshing="{Binding IsRefreshing}"
                CachingStrategy ="RecycleElement"
                IsGroupingEnabled="True"
                GroupDisplayBinding="{Binding Key}"
                SeparatorColor="{StaticResource LineColor}"
                Style="{StaticResource ListViewHasBackground}"
                GroupHeaderTemplate="{StaticResource matchHeaderTemplate}"
                ItemTemplate="{StaticResource matchTemplateSelector}"
                AutomationProperties.IsInAccessibleTree="False">
            <ListView.Behaviors>
                <b:EventToCommandBehavior 
                EventName="ItemTapped" 
                Command="{Binding MatchSelectCommand}" 
                EventArgsParameterPath="Item" />
            </ListView.Behaviors>
        </ListView>
    </StackLayout>
</ContentPage>